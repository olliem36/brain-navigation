function Neuron(a,b,c){this.connection=[],this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0,this.prevReleaseAxon=null,THREE.Vector3.call(this,a,b,c)}function Signal(a,b,c){this.minSpeed=b,this.maxSpeed=c,this.speed=THREE.Math.randFloat(this.minSpeed,this.maxSpeed),this.alive=!0,this.t=null,this.startingPoint=null,this.axon=null,this.particle=a.getParticle(),THREE.Vector3.call(this)}function ParticlePool(a){this.spriteTextureSignal=TEXTURES.electric,this.poolSize=a,this.pGeom=new THREE.Geometry,this.particles=this.pGeom.vertices,this.offScreenPos=new THREE.Vector3(9999,9999,9999),this.pColor="#ff4400",this.pSize=2;for(var b=0;b<this.poolSize;b++)this.particles[b]=new Particle(this);this.meshComponents=new THREE.Object3D,this.pMat=new THREE.PointCloudMaterial({map:this.spriteTextureSignal,size:this.pSize,color:this.pColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.pMesh=new THREE.PointCloud(this.pGeom,this.pMat),this.pMesh.frustumCulled=!1,this.meshComponents.add(this.pMesh),this.pMat_outer=this.pMat.clone(),this.pMat_outer.size=10*this.pSize,this.pMat_outer.opacity=.04,this.pMesh_outer=new THREE.PointCloud(this.pGeom,this.pMat_outer),this.pMesh_outer.frustumCulled=!1,this.meshComponents.add(this.pMesh_outer)}function Particle(a){this.particlePool=a,this.available=!0,THREE.Vector3.call(this,this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)}function Axon(a,b){this.bezierSubdivision=8,this.neuronA=a,this.neuronB=b,this.cpLength=a.distanceTo(b)/THREE.Math.randFloat(1.5,4),this.controlPointA=this.getControlPoint(a,b),this.controlPointB=this.getControlPoint(b,a),THREE.CubicBezierCurve3.call(this,this.neuronA,this.controlPointA,this.controlPointB,this.neuronB),this.vertices=this.getSubdividedVertices()}function Connection(a,b){this.axon=a,this.startingPoint=b}function NeuralNetwork(){this.initialized=!1,this.settings={verticesSkipStep:3,maxAxonDist:10,maxConnectionsPerNeuron:6,signalMinSpeed:1.75,signalMaxSpeed:3.25,currentMaxSignals:4e3,limitSignals:1e4,navNeurons:[]},this.meshComponents=new THREE.Object3D,this.particlePool=new ParticlePool(this.settings.limitSignals),this.meshComponents.add(this.particlePool.meshComponents),this.components={neurons:[],allSignals:[],allAxons:[]},this.axonOpacityMultiplier=1,this.axonColor="#0099ff",this.axonGeom=new THREE.BufferGeometry,this.axonPositions=[],this.axonIndices=[],this.axonNextPositionsIndex=0,this.axonUniforms={color:{type:"c",value:new THREE.Color(this.axonColor)},opacityMultiplier:{type:"f",value:this.axonOpacityMultiplier}},this.axonAttributes={opacity:{type:"f",value:[]}},this.neuronSizeMultiplier=.7,this.spriteTextureNeuron=TEXTURES.electric,this.spriteTextureNavNeuron=TEXTURES.circle,this.spriteTextureActiveNavNeuron=TEXTURES.hex,this.neuronColor="#00ffff",this.navNeuronColor="#ffffff",this.neuronOpacity=1,this.navNeuronOpacity=.6,this.neuronsGeom=new THREE.Geometry,this.navNeuronsGeom=new THREE.Geometry,this.neuronUniforms={sizeMultiplier:{type:"f",value:this.neuronSizeMultiplier},opacity:{type:"f",value:this.neuronOpacity},texture:{type:"t",value:this.spriteTextureNeuron}},this.neuronAttributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.neuronShaderMaterial=new THREE.ShaderMaterial({uniforms:this.neuronUniforms,attributes:this.neuronAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,transparent:!0,depthTest:!1}),this.numNeurons=0,this.numAxons=0,this.numSignals=0,this.numPassive=0,this.navItems=[{position:{x:-35.41,y:-23.49,z:-17.47},label:"Cloud based platform<br>Облачная платформа"},{position:{x:-33.06,y:23.56,z:28.03},label:"Swarm of robots<br>Управление группировками"},{position:{x:28.38,y:16.76,z:72.06},label:'Методология<br>"Эффективное предприятие"'},{position:{x:29.4,y:-8.57,z:-51.1},label:"Smart enterprise<br>ИСУ РВА"}];this.navStructure={navItem:{position:{},label:"",navLevel:1,hasSubnav:!0,subnav:{navItem:{position:{},label:"",hasSubnav:!1,navLevel:2},navItem:{position:{},label:"",hasSubnav:!1,navLevel:2},navItem:{position:{},label:"",hasSubnav:!1,navLevel:2}}}},this.navNeuronsCloud=new THREE.PointCloud(this.navNeuronsGeom,this.neuronShaderMaterial),this.initNeuralNetwork()}function animateCamera(a,b,c){var d=c/60,e=a.x,f=b.x,g=(f-e)/d,h=a.y,i=b.y,j=(i-h)/d,k=a.z,l=b.z,m=(l-k)/d;x=e+g*step,y=h+j*step,z=k+m*step,d>=step&&(camera.position.set(x,y,z),cameraCtrl.update(),step+=1),requestAnimationFrame(function(){animateCamera(a,b,c)})}function updateHelpers(){axisHelper.visible=sceneSettings.enableAxisHelper,gridHelper.visible=sceneSettings.enableGridHelper}function main(){var a=window.neuralNet=new NeuralNetwork;scene.add(a.meshComponents),initGui(),run()}function initGui(){gui=new dat.GUI,gui.width=270,gui_info=gui.addFolder("Info"),gui_info.add(neuralNet,"numNeurons").name("Neurons"),gui_info.add(neuralNet,"numAxons").name("Axons"),gui_info.add(neuralNet,"numSignals",0,neuralNet.settings.limitSignals).name("Signals"),gui_info.autoListen=!1,gui_settings=gui.addFolder("Settings"),gui_settings.add(neuralNet.settings,"currentMaxSignals",0,neuralNet.settings.limitSignals).name("Max Signals"),gui_settings.add(neuralNet.particlePool,"pSize",.2,2).name("Signal Size"),gui_settings.add(neuralNet.settings,"signalMinSpeed",0,8,.01).name("Signal Min Speed"),gui_settings.add(neuralNet.settings,"signalMaxSpeed",0,8,.01).name("Signal Max Speed"),gui_settings.add(neuralNet,"neuronSizeMultiplier",0,2).name("Neuron Size Mult"),gui_settings.add(neuralNet,"neuronOpacity",0,1).name("Neuron Opacity"),gui_settings.add(neuralNet,"axonOpacityMultiplier",0,5).name("Axon Opacity Mult"),gui_settings.addColor(neuralNet.particlePool,"pColor").name("Signal Color"),gui_settings.addColor(neuralNet,"neuronColor").name("Neuron Color"),gui_settings.addColor(neuralNet,"axonColor").name("Axon Color"),gui_settings.addColor(sceneSettings,"bgColor").name("Background"),gui_info.open(),gui_settings.open();for(var a=0;a<gui_settings.__controllers.length;a++)gui_settings.__controllers[a].onChange(updateNeuralNetworkSettings)}function updateNeuralNetworkSettings(){neuralNet.updateSettings(),neuralNet.settings.signalMinSpeed>neuralNet.settings.signalMaxSpeed&&(neuralNet.settings.signalMaxSpeed=neuralNet.settings.signalMinSpeed,gui_settings.__controllers[3].updateDisplay())}function updateGuiInfo(){for(var a=0;a<gui_info.__controllers.length;a++)gui_info.__controllers[a].updateDisplay()}function update(){if(updateHelpers(),!sceneSettings.pause){var a=clock.getDelta();neuralNet.update(a),updateGuiInfo()}}function run(){requestAnimationFrame(run),renderer.setClearColor(sceneSettings.bgColor,1),renderer.clear(),update(),renderer.render(scene,camera),stats.update(),FRAME_COUNT++}function onWindowResize(){WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,camera.aspect=screenRatio,camera.updateProjectionMatrix(),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio)}function mousewheel(a){console.log(camera.position.z)}function navWrapperMouseEnter(a){var b=a.target,c=b.querySelector("img");c.setAttribute("src","../css/icons/hex-active.svg")}function navWrapperMouseLeave(a){var b=a.target,c=b.querySelector("img");c.setAttribute("src","../css/icons/hex.svg")}Neuron.prototype=Object.create(THREE.Vector3.prototype),Neuron.prototype.connectNeuronTo=function(a){var b=this,c=new Axon(b,a);return b.connection.push(new Connection(c,"A")),a.connection.push(new Connection(c,"B")),c},Neuron.prototype.createSignal=function(a,b,c){this.firedCount+=1,this.receivedSignal=!1;for(var d=[],e=0;e<this.connection.length;e++)if(this.connection[e].axon!==this.prevReleaseAxon){var f=new Signal(a,b,c);f.setConnection(this.connection[e]),d.push(f)}return d},Neuron.prototype.reset=function(){this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0},Signal.prototype=Object.create(THREE.Vector3.prototype),Signal.prototype.setConnection=function(a){this.startingPoint=a.startingPoint,this.axon=a.axon,"A"===this.startingPoint?this.t=0:"B"===this.startingPoint&&(this.t=1)},Signal.prototype.travel=function(a){var b;"A"===this.startingPoint?(this.t+=this.speed*a,this.t>=1&&(this.t=1,this.alive=!1,this.axon.neuronB.receivedSignal=!0,this.axon.neuronB.prevReleaseAxon=this.axon)):"B"===this.startingPoint&&(this.t-=this.speed*a,this.t<=0&&(this.t=0,this.alive=!1,this.axon.neuronA.receivedSignal=!0,this.axon.neuronA.prevReleaseAxon=this.axon)),b=this.axon.getPoint(this.t),this.particle.set(b.x,b.y,b.z)},ParticlePool.prototype.getAvgExecutionTime=function(){return this.profTime/this.itt},ParticlePool.prototype.getParticle=function(){for(var a=0;a<this.poolSize;a++){var b=this.particles[a];if(b.available)return this.lastAvailableIdx=a,b.available=!1,b}return console.error("ParticlePool.prototype.getParticle return null"),null},ParticlePool.prototype.update=function(){this.pGeom.verticesNeedUpdate=!0},ParticlePool.prototype.updateSettings=function(){this.pMat.color.setStyle(this.pColor),this.pMat.size=this.pSize,this.pMat_outer.color.setStyle(this.pColor),this.pMat_outer.size=10*this.pSize},Particle.prototype=Object.create(THREE.Vector3.prototype),Particle.prototype.free=function(){this.available=!0,this.set(this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)},Axon.prototype=Object.create(THREE.CubicBezierCurve3.prototype),Axon.prototype.getSubdividedVertices=function(){return this.getSpacedPoints(this.bezierSubdivision)},Axon.prototype.getControlPoint=function(a,b){var c=(new THREE.Vector3).copy(b).sub(a).normalize(),d=new THREE.Vector3(0,0,1),e=(new THREE.Vector3).crossVectors(d,c).normalize(),f=c.angleTo(d),g=(new THREE.Matrix4).makeRotationAxis(e,f),h=Math.cos(THREE.Math.degToRad(45)),i=THREE.Math.randFloat(h,1),j=THREE.Math.randFloat(0,2*Math.PI),k=Math.sqrt(1-i*i),l=new THREE.Vector3(k*Math.cos(j),k*Math.sin(j),i);return l.multiplyScalar(this.cpLength),l.applyMatrix4(g),l.add(a),l},NeuralNetwork.prototype.initNeuralNetwork=function(){var a=OBJ_MODELS.brain.geometry.vertices;this.initNeurons(a,this.navItems),this.initAxons(),this.neuronShaderMaterial.vertexShader=SHADER_CONTAINER.neuronVert,this.neuronShaderMaterial.fragmentShader=SHADER_CONTAINER.neuronFrag,this.axonShaderMaterial.vertexShader=SHADER_CONTAINER.axonVert,this.axonShaderMaterial.fragmentShader=SHADER_CONTAINER.axonFrag,this.initialized=!0},NeuralNetwork.prototype.createNavCloud=function(){return this.navItems.forEach(function(a){var b=new THREE.Object3D;b.position.x=a.position.x,b.position.y=a.position.y,b.position.z=a.position.z,navNeurons.push(b)}),navNeurons},NeuralNetwork.prototype.initNeurons=function(a,b){var c;for(c=0;c<a.length;c+=this.settings.verticesSkipStep){var d=a[c],e=new Neuron(d.x,d.y,d.z);this.components.neurons.push(e),this.neuronsGeom.vertices.push(e)}for(c=0;c<b.length;c+=1){var f=b[c],e=new Neuron(f.position.x,f.position.y,f.position.z);e.isNavNeuron=!0,this.components.neurons.push(e),this.navNeuronsGeom.vertices.push(e)}for(this.neuronParticles=new THREE.PointCloud(this.neuronsGeom,this.neuronShaderMaterial),this.navNeuronParticles=new THREE.PointCloud(this.navNeuronsGeom,this.navNeuronShaderMaterial),this.meshComponents.add(this.neuronParticles),this.meshComponents.add(this.navNeuronParticles),c=0;c<this.components.neurons.length;c++){var d=this.components.neurons[c];this.neuronAttributes.color.value[c]=new THREE.Color("#ffffff"),this.neuronAttributes.size.value[c]=THREE.Math.randFloat(1,10)}this.neuronShaderMaterial.needsUpdate=!0,this.initLabels()},NeuralNetwork.prototype.initAxons=function(){for(var a=this.components.neurons.length,b=0;a>b;b++)for(var c=this.components.neurons[b],d=b+1;a>d;d++){var e=this.components.neurons[d];if(c!==e&&c.distanceTo(e)<this.settings.maxAxonDist&&c.connection.length<this.settings.maxConnectionsPerNeuron&&e.connection.length<this.settings.maxConnectionsPerNeuron){var f=c.connectNeuronTo(e);this.constructAxonArrayBuffer(f)}}renderer.getContext().getExtension("OES_element_index_uint")||console.error("32bit index buffer not supported!");var g=new Uint32Array(this.axonIndices),h=new Float32Array(this.axonPositions),j=new Float32Array(this.axonAttributes.opacity.value);this.axonGeom.addAttribute("index",new THREE.BufferAttribute(g,1)),this.axonGeom.addAttribute("position",new THREE.BufferAttribute(h,3)),this.axonGeom.addAttribute("opacity",new THREE.BufferAttribute(j,1)),this.axonGeom.computeBoundingSphere(),this.axonShaderMaterial=new THREE.ShaderMaterial({uniforms:this.axonUniforms,attributes:this.axonAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.axonMesh=new THREE.Line(this.axonGeom,this.axonShaderMaterial,THREE.LinePieces),this.meshComponents.add(this.axonMesh);var k=0;for(i=0;i<a;i++)this.components.neurons[i].connection[0]||(k+=1);console.log("numNotConnected =",k)},NeuralNetwork.prototype.initLabels=function(){var a,b=this.navItems,c=document.getElementById("canvas-container");for(i in b){var d=document.createElement("div");d.classList.add("nav-wrapper"),d.setAttribute("id",i);var e=document.createElement("div"),f=document.createElement("img");f.setAttribute("src","../css/icons/hex.svg"),e.classList.add("nav-label"),e.appendChild(f),d.appendChild(e);var g=document.createElement("div");a=b[i],g.classList.add("nav-text"),g.innerHTML=a.label,d.appendChild(g),document.body.insertBefore(d,c)}this.updateLabels()},NeuralNetwork.prototype.updateLabels=function(){var a,b=this.navItems,c=(document.getElementById("canvas-container"),{top:-24,left:24});for(i in b){var d=new THREE.Object3D,e=document.querySelectorAll(".nav-wrapper")[i];a=b[i],d.x=a.position.x,d.y=a.position.y,d.z=a.position.z;var f=this.toScreenPosition(d,camera);e.style.left=f.x+c.left+"px",e.style.top=f.y+c.top+"px"}},NeuralNetwork.prototype.update=function(a){if(this.initialized){var b,c,d=Date.now();for(c=0;c<this.components.neurons.length;c++)b=this.components.neurons[c],b.isNavNeuron,this.components.allSignals.length<this.settings.currentMaxSignals-this.settings.maxConnectionsPerNeuron&&b.receivedSignal&&b.firedCount<8&&(b.lastSignalRelease=d,b.releaseDelay=THREE.Math.randInt(100,1e3),this.releaseSignalAt(b)),b.receivedSignal=!1;0===this.components.allSignals.length&&(this.resetAllNeurons(),this.releaseSignalAt(this.components.neurons[THREE.Math.randInt(0,this.components.neurons.length)]));for(var e=this.components.allSignals.length-1;e>=0;e--){var f=this.components.allSignals[e];if(f.travel(a),!f.alive){f.particle.free();for(var g=this.components.allSignals.length-1;g>=0;g--)if(f===this.components.allSignals[g]){this.components.allSignals.splice(g,1);break}}}this.updateLabels(),this.particlePool.update(),this.updateInfo()}},NeuralNetwork.prototype.constructAxonArrayBuffer=function(a){this.components.allAxons.push(a);for(var b=a.vertices,c=0;c<b.length;c++){if(this.axonPositions.push(b[c].x,b[c].y,b[c].z),c<b.length-1){var d=this.axonNextPositionsIndex;this.axonIndices.push(d,d+1);var e=THREE.Math.randFloat(.005,.2);this.axonAttributes.opacity.value.push(e,e)}this.axonNextPositionsIndex+=1}},NeuralNetwork.prototype.releaseSignalAt=function(a){for(var b=a.createSignal(this.particlePool,this.settings.signalMinSpeed,this.settings.signalMaxSpeed),c=0;c<b.length;c++){var d=b[c];this.components.allSignals.push(d)}},NeuralNetwork.prototype.resetAllNeurons=function(){this.numPassive=0;for(var a=0;a<this.components.neurons.length;a++)n=this.components.neurons[a],n.fired||(this.numPassive+=1),n.reset()},NeuralNetwork.prototype.updateInfo=function(){this.numNeurons=this.components.neurons.length,this.numAxons=this.components.allAxons.length,this.numSignals=this.components.allSignals.length},NeuralNetwork.prototype.updateSettings=function(){for(this.neuronUniforms.opacity.value=this.neuronOpacity,i=0;i<this.components.neurons.length;i++)this.neuronAttributes.color.value[i].setStyle(this.neuronColor);this.neuronAttributes.color.needsUpdate=!0,this.navNeuronAttributes.color.needsUpdate=!0,this.neuronUniforms.sizeMultiplier.value=this.neuronSizeMultiplier,this.axonUniforms.color.value.set(this.axonColor),this.axonUniforms.opacityMultiplier.value=this.axonOpacityMultiplier,this.particlePool.updateSettings()},NeuralNetwork.prototype.testChangOpcAttr=function(){for(var a=this.axonGeom.attributes.opacity.array,b=0;b<a.length;b++)a[b]=THREE.Math.randFloat(0,.5);this.axonGeom.attributes.opacity.needsUpdate=!0},NeuralNetwork.prototype.toScreenPosition=function(a,b){var c=new THREE.Vector3(a.x,a.y,a.z),d=c.project(b);return d.x=(d.x+1)/2*window.innerWidth,d.y=-(d.y-1)/2*window.innerHeight,{x:d.x,y:d.y}};var loadingManager=new THREE.LoadingManager;loadingManager.onLoad=function(){document.getElementById("loading").style.display="none",console.log("Done."),main()},loadingManager.onProgress=function(a,b,c){console.log(b+"/"+c,a)};var shaderLoader=new THREE.XHRLoader(loadingManager);shaderLoader.setResponseType("text"),shaderLoader.loadMultiple=function(a,b){_.each(b,function(b,c){shaderLoader.load(b,function(b){a[c]=b})})};var SHADER_CONTAINER={};shaderLoader.loadMultiple(SHADER_CONTAINER,{neuronVert:"shaders/neuron.vert",neuronFrag:"shaders/neuron.frag",axonVert:"shaders/axon.vert",axonFrag:"shaders/axon.frag"});var OBJ_MODELS={},OBJloader=new THREE.OBJLoader(loadingManager);OBJloader.load("models/brain_vertex_low.obj",function(a){OBJ_MODELS.brain=a.children[0]});var TEXTURES={},textureLoader=new THREE.TextureLoader(loadingManager);textureLoader.load("sprites/electric.png",function(a){TEXTURES.electric=a}),textureLoader.load("sprites/hex.png",function(a){TEXTURES.hex=a}),textureLoader.load("sprites/circle.png",function(a){TEXTURES.circle=a}),Detector.webgl||Detector.addGetWebGLMessage();var container,stats,scene,light,camera,cameraCtrl,renderer,WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,clock=new THREE.Clock,FRAME_COUNT=0,cameraInitialPos={x:680,y:900,z:-1030},cameraToPos={x:-780,y:1030,z:-870},sceneSettings={pause:!1,bgColor:1381654,enableGridHelper:!1,enableAxisHelper:!1};container=document.getElementById("canvas-container"),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(10,screenRatio,10,5e3),cameraCtrl=new THREE.OrbitControls(camera,container),cameraCtrl.noZoom=!1,camera.position.set(cameraInitialPos.x,cameraInitialPos.y,cameraInitialPos.z),cameraCtrl.update();var requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,step=0;requestAnimationFrame(function(){animateCamera(cameraInitialPos,cameraToPos,5e3)});var theta=0,radius=100;theta+=.1,renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio),renderer.setClearColor(sceneSettings.bgColor,1),renderer.autoClear=!1,container.appendChild(renderer.domElement),stats=new Stats,container.appendChild(stats.domElement);var gridHelper=new THREE.GridHelper(600,50);gridHelper.setColors(48127,16777215),gridHelper.material.opacity=.1,gridHelper.material.transparent=!0,gridHelper.position.y=-300,scene.add(gridHelper);var axisHelper=new THREE.AxisHelper(50);scene.add(axisHelper);var gui,gui_info,gui_settings;window.addEventListener("keypress",function(a){var b=a.keyCode;switch(b){case 32:sceneSettings.pause=!sceneSettings.pause;break;case 65:case 97:sceneSettings.enableGridHelper=!sceneSettings.enableGridHelper;break;case 83:case 115:sceneSettings.enableAxisHelper=!sceneSettings.enableAxisHelper}}),setTimeout(function(){for(var a=document.querySelectorAll(".nav-wrapper"),b=0;b<a.length;b++){var c=a[b];c.addEventListener("mouseenter",function(a){navWrapperMouseEnter(a)}),c.addEventListener("mouseleave",function(a){navWrapperMouseLeave(a)})}},100),$(function(){var a;$(window).resize(function(){clearTimeout(a),a=setTimeout(function(){onWindowResize()},250)})});var canvas=document.querySelector("canvas");canvas.addEventListener("DOMMouseScroll",mousewheel,!1),canvas.addEventListener("mousewheel",mousewheel,!1),document.addEventListener("DOMMouseScroll",mousewheel,!1),document.body.addEventListener("mousewheel",mousewheel,!1);